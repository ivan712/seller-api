{
    "openapi": "3.0.0",
    "paths": {
        "/api/v1/user/me": {
            "get": {
                "operationId": "UserController_getUserInfo",
                "summary": "Get user and organization info",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "User info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "eb66d0f3-0d45-4bc2-b581-f1889e3219aa"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Ivan"
                                        },
                                        "phoneNumber": {
                                            "type": "string",
                                            "example": "79856829101"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "owner"
                                        },
                                        "org": {
                                            "type": "object",
                                            "example": {
                                                "id": "29257343-ecfb-4f9d-b395-c062ab810dc3",
                                                "inn": "1234567890",
                                                "name": "Gazprom",
                                                "type": "LEGAL",
                                                "ogrn": "1234567890123",
                                                "legalAddress": "Pushkina street, h.1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/preregister": {
            "post": {
                "operationId": "AuthController_preregister",
                "summary": "Get sms code for registration",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "+7-985-682-91-01",
                                        "description": "phone number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sms has been sent to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь уже зарегистрирован"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "operationId": "AuthController_register",
                "summary": "Register user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "+7-985-682-91-01",
                                        "description": "phone number"
                                    },
                                    "validationCode": {
                                        "type": "string",
                                        "example": "012345",
                                        "description": "validation code"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Ivan",
                                        "description": "user's name"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "owner",
                                        "description": "user's role"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Register user and get token for password setting",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "updateToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODM4MTMzLCJleHAiOjE3MDc4Mzg0MzMsImp0aSI6Ijk2OTkzYmE5ZmE0NmMzYzAzNThlY2RlZGQxIn0.6GIQG-2Dj7LCMFh4O89JacO3UtFTZa5qltiDOpAWYtE"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь уже зарегистрирован"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/v1/auth/password/update": {
            "patch": {
                "operationId": "AuthController_updatePassword",
                "summary": "Update password",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "example": "Hello123!",
                                        "description": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been changed or created succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODMwNTA3LCJleHAiOjE3MDc4MzQxMDd9.dRQi5oo_HT7PA87k5mTeUdYfmzGb924bFlzbB7pkyqs"
                                        },
                                        "refreshToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODMwNTA3LCJleHAiOjE3MDc4NjY1MDcsImp0aSI6IjVlZjcxNTkzNmZmMTE4NWE0ZTc2NTgwNDkxIn0.1vd4KUc6vAHN2apLFycdHhx0AayLY95pVE7uFwfVaVE"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Password is not strong enough",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Password is not strong enough"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid jwt update token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "operationId": "AuthController_login",
                "summary": "Login",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "+7-985-682-91-01",
                                        "description": "Phone number"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Hello123!",
                                        "description": "Password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get access and refresh tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODMwNTA3LCJleHAiOjE3MDc4MzQxMDd9.dRQi5oo_HT7PA87k5mTeUdYfmzGb924bFlzbB7pkyqs"
                                        },
                                        "refreshToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODMwNTA3LCJleHAiOjE3MDc4NjY1MDcsImp0aSI6IjVlZjcxNTkzNmZmMTE4NWE0ZTc2NTgwNDkxIn0.1vd4KUc6vAHN2apLFycdHhx0AayLY95pVE7uFwfVaVE"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неверный телефонный номер пользователя или пароль"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "operationId": "AuthController_refresh",
                "summary": "Refresh tokens",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Refresh access and refresh tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "accessToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODMwNTA3LCJleHAiOjE3MDc4MzQxMDd9.dRQi5oo_HT7PA87k5mTeUdYfmzGb924bFlzbB7pkyqs"
                                        },
                                        "refreshToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODMwNTA3LCJleHAiOjE3MDc4NjY1MDcsImp0aSI6IjVlZjcxNTkzNmZmMTE4NWE0ZTc2NTgwNDkxIn0.1vd4KUc6vAHN2apLFycdHhx0AayLY95pVE7uFwfVaVE"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "operationId": "AuthController_logout",
                "summary": "Logout",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Logout succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/password/reset/request": {
            "post": {
                "operationId": "AuthController_passwordResetRequest",
                "summary": "Get sms code for password changing",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "+7-985-682-91-01",
                                        "description": "Phone number"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sms has been sent to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не найден"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/v1/auth/password/reset/confirm": {
            "post": {
                "operationId": "AuthController_passwordResetConfirm",
                "summary": "Enter sms code and get token for password changing",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phoneNumber": {
                                        "type": "string",
                                        "example": "+7-985-682-91-01",
                                        "description": "Phone number"
                                    },
                                    "validationCode": {
                                        "type": "string",
                                        "example": "012345",
                                        "description": "Мalidation code"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get token for password setting",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "updateToken": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwaG9uZU51bWJlciI6Ijc5ODU2ODI5MTAxIiwiaWF0IjoxNzA3ODM4MTMzLCJleHAiOjE3MDc4Mzg0MzMsImp0aSI6Ijk2OTkzYmE5ZmE0NmMzYzAzNThlY2RlZGQxIn0.6GIQG-2Dj7LCMFh4O89JacO3UtFTZa5qltiDOpAWYtE"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неверный телефонный номер пользователя или код"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            }
        },
        "/api/v1/organization/registration": {
            "post": {
                "operationId": "OrganizationController_createOrg",
                "summary": "Register organization",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "inn": {
                                        "type": "string",
                                        "example": "1234567890",
                                        "description": "Organization inn. 12 digits for individual and 10 for legal"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Gazprom",
                                        "description": "Organization name"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "LEGAL",
                                        "description": "Organization type. LEGAL or INDIVIDUAL"
                                    },
                                    "ogrn": {
                                        "type": "string",
                                        "example": "1234567890123",
                                        "description": "Organization ogrn. 13 digits"
                                    },
                                    "legalAddress": {
                                        "type": "string",
                                        "example": "Pushkina street, h.1",
                                        "description": "Organization address"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Organization has been created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Организация с данным ИНН уже зарегистрирована"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Organization"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/organization/dadata/{inn}": {
            "get": {
                "operationId": "OrganizationController_getOrgInfoFromThirdartyApi",
                "summary": "Get organization info from dadata by inn",
                "parameters": [
                    {
                        "name": "inn",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization info from dadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "inn": {
                                            "type": "string",
                                            "example": "1234567890",
                                            "description": "Organization inn. 12 digits for individual and 10 for legal"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Gazprom",
                                            "description": "Organization name"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "LEGAL",
                                            "description": "Organization type. LEGAL or INDIVIDUAL"
                                        },
                                        "ogrn": {
                                            "type": "string",
                                            "example": "1234567890123",
                                            "description": "Organization ogrn. 13 digits"
                                        },
                                        "legalAddress": {
                                            "type": "string",
                                            "example": "Pushkina street, h.1",
                                            "description": "Organization address"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Недопустимое значение ИНН"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Organization"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/survey/answer": {
            "post": {
                "operationId": "SurveyController_answerQuestions",
                "summary": "Answer the questions",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "region": {
                                        "type": "string",
                                        "example": "MO",
                                        "description": "Seller region"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Moscow",
                                        "description": "Seller city"
                                    },
                                    "salePlace": {
                                        "type": "string",
                                        "example": "RF",
                                        "description": "Sales either in seller's region or throughout the Russian Federation"
                                    },
                                    "mandatoryCertification": {
                                        "type": "boolean",
                                        "example": true,
                                        "description": "Are the goods sold subject to mandatory certification?"
                                    },
                                    "productCategory": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "example": "ForHome"
                                        }
                                    },
                                    "workingModel": {
                                        "type": "string",
                                        "example": "FBO",
                                        "description": "Working model: FBO or FBS"
                                    },
                                    "experienceOnOthersMarketplaces": {
                                        "type": "string",
                                        "example": true,
                                        "experienceOnOthersMarketplaces": "Do you have any sales experience on other marketplaces?"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User has answered questions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User's organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Не найдена информация об организации пользователя"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Survey"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "get": {
                "operationId": "SurveyController_getUserAnswers",
                "summary": "User's answers",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get user's answers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "region": {
                                            "type": "string",
                                            "example": "MO",
                                            "description": "Seller region"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Moscow",
                                            "description": "Seller city"
                                        },
                                        "salePlace": {
                                            "type": "string",
                                            "example": "RF",
                                            "description": "Sales either in seller's region or throughout the Russian Federation"
                                        },
                                        "mandatoryCertification": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Are the goods sold subject to mandatory certification?"
                                        },
                                        "productCategory": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "ForHome"
                                            }
                                        },
                                        "workingModel": {
                                            "type": "string",
                                            "example": "FBO",
                                            "description": "Working model: FBO or FBS"
                                        },
                                        "experienceOnOthersMarketplaces": {
                                            "type": "string",
                                            "example": true,
                                            "experienceOnOthersMarketplaces": "Do you have any sales experience on other marketplaces?"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 401
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Survey"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/admin/organization/registration/confirm/{id}": {
            "patch": {
                "operationId": "AdminController_confirmRegistration",
                "summary": "Confirm organization registration",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "organization id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful confirmation of the organization registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Организация не найдена"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "basic": []
                    }
                ]
            }
        },
        "/api/v1/admin/organization/registration/reject/{id}": {
            "patch": {
                "operationId": "AdminController_rejectRegistration",
                "summary": "Reject organization registration",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "organization id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful confirmation of the organization registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "statusCode": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Организация не найдена"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "basic": []
                    }
                ]
            }
        },
        "/api/v1/admin/application/all": {
            "get": {
                "operationId": "AdminController_getAllOrgs",
                "summary": "Get all applications",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Admin"
                ],
                "security": [
                    {
                        "basic": []
                    }
                ]
            }
        }
    },
    "info": {
        "title": "Auth Service",
        "description": "Auth API description",
        "version": "1.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "Auth Api",
            "description": ""
        }
    ],
    "servers": [],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            },
            "basic": {
                "type": "apiKey",
                "scheme": "basic",
                "name": "authorization",
                "in": "header"
            }
        },
        "schemas": {}
    }
}